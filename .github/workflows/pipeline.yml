on:
  push:
    branches: [ "develop", "production" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create a temporary directory for archiving
        run: mkdir -p /tmp/project-archive

      - name: Copy files to temporary directory
        run: rsync -a --exclude='.git' --exclude='node_modules' ./ /tmp/project-archive

      - name: Archive project files
        run: tar -czf /tmp/project.tar.gz -C /tmp/project-archive .

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: project-artifact
          path: /tmp/project.tar.gz

  deploy:
    runs-on: self-hosted
    needs: build

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: project-artifact

      - name: SSH to EC2 and deploy with PM2
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: 22
          script_stop: true
          script: |
            # Navigate to the project directory or create it if it doesn't exist
            sudo mkdir -p /var/www/transaction-backend
            sudo chown -R $USER:$USER /var/www/transaction-backend
            cd /var/www/transaction-backend

            # Stop the current PM2 process based on the branch
            if [ "$GITHUB_REF_NAME" = "develop" ]; then
              pm2 stop transaction-backend-prod || true
              pm2 delete transaction-backend-prod || true
            elif [ "$GITHUB_REF_NAME" = "production" ]; then
              pm2 stop transaction-backend-dev || true
              pm2 delete transaction-backend-dev || true
            fi

            # Remove old files
            rm -rf *

            # Extract the new project files
            tar -xzf /tmp/project.tar.gz -C .

            # Install dependencies
            npm ci

            # Start the appropriate PM2 process based on the branch
            if [ "$GITHUB_REF_NAME" = "develop" ]; then
              pm2 start npm --name "transaction-backend-dev" -- run start:dev
            elif [ "$GITHUB_REF_NAME" = "production" ]; then
              pm2 start npm --name "transaction-backend-prod" -- run start:prod
            fi

            # Save PM2 state to restart on server reboot
            pm2 save

      - name: Check PM2 status
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: 22
          script_stop: true
          script: |
            pm2 list
